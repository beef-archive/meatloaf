(function(c,r,a){"use strict";const[i,s,d,o]=r.batchFind(({findByProps:n,findByDisplayName:l})=>{n("trackWithMetadata"),n("AnalyticsActionHandlers"),n("encodeProperties","track"),n("submitLiveCrashReport")}),e=[],t={main:window.__SENTRY__?.hub,client:window.__SENTRY__?.hub?.getClient()};i&&(e.push(a.instead("trackWithMetadata",i,()=>{})),e.push(a.instead("trackWithGroupMetadata",i,i,()=>{})),e.push(a.instead("trackWithGroupMetadata",i,i,()=>{}))),s&&e.push(a.instead("handleTrack",s.AnalyticsActionHandlers,()=>{})),d&&e.push(a.instead("track",d,()=>{})),o&&e.push(a.instead("submitLiveCrashReport",o,()=>{})),t.main&&t.client&&(t.client.close(),t.main.getStackTop().scope.clear(),t.main.getScope().clear(),e.push(a.instead("addBreadcrumb",t.main,()=>{})));function u(){_.forEachRight(e,n=>n()),t.main&&t.client&&(t.client.getOptions().enabled=!0)}return c.onUnload=u,Object.defineProperty(c,"__esModule",{value:!0}),c})({},cumcord.modules.webpack,cumcord.patcher);
